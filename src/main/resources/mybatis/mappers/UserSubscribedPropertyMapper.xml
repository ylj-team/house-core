<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <!-- namespace命名空间,作用就是对sql进行分类化的管理,理解为sql隔离
    注意:使用mapper代理开发时，namespace有特殊作用,namespace等于mapper接口地址
 -->
<mapper namespace="house.domain.mapper.UserSubscribedPropertyMapper">
 
 
  <resultMap id="PropertyResultMap" type="house.domain.UserSubscribedProperty">  
    <!--  <id column="id" property="id"  jdbcType="BIGINT" />   -->   
    
        <result column="account" property="account"   jdbcType="VARCHAR"/>  
        <result column="propertyId" property="propertyId"   jdbcType="VARCHAR"/> 
        <result column="propertyName" property="propertyName"   jdbcType="VARCHAR"/> 
        <result column="subscriptTime" property="subscriptTime"   jdbcType="BIGINT"/> 
 
   </resultMap>  
   
  <select id="querySubscriptionOfAccount" resultMap="PropertyResultMap">
    select 
    	account,propertyId,propertyName,subscriptTime
    from 
    	User_Subscribed_Property
    where 
    	account = #{account,jdbcType=VARCHAR}
  </select>
  
  
   <insert id="insertSubscriptions">
   
    insert into User_Subscribed_Property
    	(account,propertyId,propertyName,subscriptTime)
	values 
		<foreach collection="list" item="item" index="index" separator="," > 
   		 	(#{item.account,jdbcType=VARCHAR},#{item.propertyId,jdbcType=VARCHAR},#{item.propertyName,jdbcType=VARCHAR},#{item.subscriptTime,jdbcType=BIGINT})
   		 </foreach>  
  </insert>
      
   
   <delete id="deleteSubscriptions">
    
    delete from User_Subscribed_Property
    where
		 account=#{account,jdbcType=VARCHAR} and propertyId=#{propertyId,jdbcType=VARCHAR}
  </delete>

      
</mapper>
